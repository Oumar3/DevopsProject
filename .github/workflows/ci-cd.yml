name: continuous-integration

env:
  NODE_version: "20"

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_version }}
      - name: Test
        run: |
          cd frontend && npm install && npm run build
          cd ../backend && npm install && node --check server.js
          echo "Le test est passé avec succès !"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Connexion à Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD_SECRET }}

      - name: Build des images Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }} ./frontend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest -t ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }} ./backend

      - name: Push vers Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/ubuntu/DevopsProject
            git pull origin main
            docker pull ${DOCKER_USERNAME}/frontend:latest
            docker pull ${DOCKER_USERNAME}/backend:latest
            docker compose -f docker-compose-prod.yml down
            docker compose -f docker-compose-prod.yml up -d
            echo "Déploiement terminé!"
